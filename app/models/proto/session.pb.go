// Code generated by protoc-gen-go. DO NOT EDIT.
// source: session.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorMess struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorMess) Reset()         { *m = ErrorMess{} }
func (m *ErrorMess) String() string { return proto.CompactTextString(m) }
func (*ErrorMess) ProtoMessage()    {}
func (*ErrorMess) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{0}
}

func (m *ErrorMess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMess.Unmarshal(m, b)
}
func (m *ErrorMess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMess.Marshal(b, m, deterministic)
}
func (m *ErrorMess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMess.Merge(m, src)
}
func (m *ErrorMess) XXX_Size() int {
	return xxx_messageInfo_ErrorMess.Size(m)
}
func (m *ErrorMess) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMess.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMess proto.InternalMessageInfo

func (m *ErrorMess) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CreateMess struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Uid                  uint32   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Expiration           int32    `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMess) Reset()         { *m = CreateMess{} }
func (m *CreateMess) String() string { return proto.CompactTextString(m) }
func (*CreateMess) ProtoMessage()    {}
func (*CreateMess) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{1}
}

func (m *CreateMess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMess.Unmarshal(m, b)
}
func (m *CreateMess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMess.Marshal(b, m, deterministic)
}
func (m *CreateMess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMess.Merge(m, src)
}
func (m *CreateMess) XXX_Size() int {
	return xxx_messageInfo_CreateMess.Size(m)
}
func (m *CreateMess) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMess.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMess proto.InternalMessageInfo

func (m *CreateMess) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *CreateMess) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CreateMess) GetExpiration() int32 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

type LoginResult struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResult) Reset()         { *m = LoginResult{} }
func (m *LoginResult) String() string { return proto.CompactTextString(m) }
func (*LoginResult) ProtoMessage()    {}
func (*LoginResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{2}
}

func (m *LoginResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResult.Unmarshal(m, b)
}
func (m *LoginResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResult.Marshal(b, m, deterministic)
}
func (m *LoginResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResult.Merge(m, src)
}
func (m *LoginResult) XXX_Size() int {
	return xxx_messageInfo_LoginResult.Size(m)
}
func (m *LoginResult) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResult.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResult proto.InternalMessageInfo

func (m *LoginResult) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *LoginResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ErrorMess)(nil), "proto.ErrorMess")
	proto.RegisterType((*CreateMess)(nil), "proto.CreateMess")
	proto.RegisterType((*LoginResult)(nil), "proto.LoginResult")
}

func init() {
	proto.RegisterFile("session.proto", fileDescriptor_3a6be1b361fa6f14)
}

var fileDescriptor_3a6be1b361fa6f14 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2e,
	0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x8a, 0x5c,
	0x9c, 0xae, 0x45, 0x45, 0xf9, 0x45, 0xbe, 0x40, 0x49, 0x21, 0x11, 0x2e, 0xd6, 0x54, 0x10, 0x47,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc2, 0x51, 0x0a, 0xe0, 0xe2, 0x72, 0x2e, 0x4a, 0x4d,
	0x2c, 0x49, 0x05, 0xab, 0x11, 0xe0, 0x62, 0x2e, 0xce, 0x4c, 0x81, 0xaa, 0x00, 0x31, 0x41, 0x22,
	0xa5, 0x40, 0x11, 0x26, 0xa0, 0x08, 0x6f, 0x10, 0x88, 0x29, 0x24, 0xc7, 0xc5, 0x95, 0x5a, 0x51,
	0x90, 0x59, 0x94, 0x58, 0x02, 0xb4, 0x4f, 0x82, 0x19, 0x28, 0xc1, 0x1a, 0x84, 0x24, 0xa2, 0x64,
	0xcb, 0xc5, 0xed, 0x93, 0x9f, 0x9e, 0x99, 0x17, 0x94, 0x5a, 0x5c, 0x9a, 0x53, 0x22, 0x24, 0xc1,
	0xc5, 0x0e, 0x75, 0x1b, 0xd4, 0x58, 0x18, 0x17, 0xe1, 0x20, 0x26, 0x24, 0x07, 0x19, 0x59, 0x70,
	0xb1, 0x07, 0x43, 0x15, 0xe8, 0x72, 0xb1, 0x41, 0xdc, 0x26, 0x24, 0x08, 0xf1, 0x97, 0x1e, 0xc2,
	0xa9, 0x52, 0x02, 0x50, 0x21, 0xb8, 0x07, 0x93, 0xd8, 0xc0, 0x02, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x7d, 0x91, 0x9e, 0x2f, 0x0c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SessionClient is the client API for Session service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionClient interface {
	Create(ctx context.Context, in *CreateMess, opts ...grpc.CallOption) (*ErrorMess, error)
}

type sessionClient struct {
	cc grpc.ClientConnInterface
}

func NewSessionClient(cc grpc.ClientConnInterface) SessionClient {
	return &sessionClient{cc}
}

func (c *sessionClient) Create(ctx context.Context, in *CreateMess, opts ...grpc.CallOption) (*ErrorMess, error) {
	out := new(ErrorMess)
	err := c.cc.Invoke(ctx, "/proto.Session/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionServer is the server API for Session service.
type SessionServer interface {
	Create(context.Context, *CreateMess) (*ErrorMess, error)
}

// UnimplementedSessionServer can be embedded to have forward compatible implementations.
type UnimplementedSessionServer struct {
}

func (*UnimplementedSessionServer) Create(ctx context.Context, req *CreateMess) (*ErrorMess, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterSessionServer(s *grpc.Server, srv SessionServer) {
	s.RegisterService(&_Session_serviceDesc, srv)
}

func _Session_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMess)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Session/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServer).Create(ctx, req.(*CreateMess))
	}
	return interceptor(ctx, in, info, handler)
}

var _Session_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Session",
	HandlerType: (*SessionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Session_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "session.proto",
}
