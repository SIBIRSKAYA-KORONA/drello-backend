openapi: 3.0.0
info:
  description: Документация к нашему REST чудовищу
  version: 1.0.0
  title: Drello backend API
externalDocs:
  description: Репозиторий бэкенда на github
  url: https://github.com/go-park-mail-ru/2020_1_SIBIRSKAYA_KORONA/tree/api
servers:
  - url: http://localhost:8080
security:
  - app_id: []
tags:
  - name: settings
    description: Основная работа по настройке профиля (в том числе регистрация)
    externalDocs:
      description: Какой бы сюда вставить URL??
      url: http://swagger.io
  - name: session
    description: Основная работа с сессиями пользователя
    externalDocs:
      description: Какой бы сюда вставить URL??
      url: http://swagger.io
  - name: profile
    description: Основная работа с профилем
    externalDocs:
      description: Какой бы сюда вставить URL??
      url: http://swagger.io
  - name: boards
    description: Основная работа с досками
    externalDocs:
      description: Какой бы сюда вставить URL??
      url: http://swagger.io
  - name: columns
    description: Основная работа с колонками
    externalDocs:
      description: Какой бы сюда вставить URL??
      url: http://swagger.io
  - name: tasks
    description: Основная работа с тасками
    externalDocs:
      description: Какой бы сюда вставить URL??
      url: http://swagger.io
paths:
  /settings:
    post:
      tags:
        - settings
      summary: Регистрируем пользователя в нашем сервисе
      description: ...
      requestBody:
        description: Данные, необходимые для регистрации
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Board/properties/admins/items"
            example:
              name: Vasya
              surname: Pupkin
              nickname: Legolas1
              email: VasyaPupkin@gmail.com
              password: qwerty1234
      responses:
        "200":
          description: Успешная регистрация
          headers:
            session_id:
              schema:
                type: string
              description: Наша авторизационная кука (пример -
                4d756d94-b9d8-48dd-a4fe-cdc14d251ec2).
        "303":
          description: Постучались на данный endpoint с выставленной кукой
        "400":
          description: Тело запроса не соответствует модели пользователя
        "409":
          description: Пользователь с такими регистрационными данными уже существует
    get:
      tags:
        - settings
      summary: Получаем все данные о пользователе (у нас сейчас приходят одни и те же
        данные, что из /profile/{..}
      description: ...
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Валидный запрос данных пользователя
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Board/properties/admins/items"
              example:
                id: 110323
                name: Vasya
                surname: Pupkin
                nickname: Legolas1
                email: VasyaPupkin@gmail.com
                avatar: Обсуждаем
        "401":
          description: В запросе отсутствует кука
        "500":
          description: Внутренная ошибка при маршалинге найденного пользователя
    put:
      tags:
        - settings
      summary: Обновляем данные пользователя
      description: ...
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      requestBody:
        description: Данные, необходимые для обновления (все завернуто в мультипарт-форму)
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                newName:
                  type: string
                newSurname:
                  type: string
                newNickname:
                  type: string
                newEmail:
                  type: string
                oldPassword:
                  type: password
                newPassword:
                  type: password
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: Успешно обновили
        "400":
          description: Невалидное тело запроса с информацией для обновления
        "401":
          description: В запросе отсутствует кука
        "412":
          description: Неверный пароль
    delete:
      tags:
        - settings
      summary: Удаляем нашего пользователя
      description: ...
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Успешное удаление
        "401":
          description: В запросе отсутствует кука
        "500":
          description: Ошибка на сервере при удалении
  /session:
    post:
      tags:
        - session
      summary: Операция авторизации в нашем сервисе
      description: ...
      requestBody:
        description: Данные, необходимые для авторизации
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Board/properties/admins/items"
            example:
              nickname: Legolas1
              password: qwerty1234
      responses:
        "200":
          description: Успешно авторизовались, в ответе вшита кука
          headers:
            session_id:
              schema:
                type: string
              description: Наша авторизационная кука.
        "303":
          description: Постучались на данный endpoint с выставленной кукой
        "400":
          description: Невалидное тело запроса
        "412":
          description: Неверный пароль
    get:
      tags:
        - session
      summary: Проверяем наличие сессии
      description: ...
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: В запросе выставлена актуальная кука, всё ок
        "401":
          description: В запросе куки нет
        "500":
          description: На сервере ошибка cоответствия куки пользователя и кукой, которая
            лежит в базе (пока в работе)
    delete:
      tags:
        - session
      summary: Операция logout, удаляем куку
      description: ...
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Успешно удалили куку
        "401":
          description: В запросе куки нет
        "500":
          description: На сервере ошибка удаления куки из хранилища
  "/profile/{id_or_nickname}":
    get:
      tags:
        - profile
      summary: Запрос к публичным данным пользователя по идентификатору в сервисе
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: id пользователя, публичные данные которого хотим просмотреть
          example: 1106234
      responses:
        "200":
          description: Корректный запрос, существующий пользователь, данные в теле ответа
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Board/properties/admins/items"
              example:
                name: Vasya
                surname: Pupkin
                nickname: Legolas1
                email: VasyaPupkin@gmail.com
                avatar: Обсуждаем
        "404":
          description: Пользователь не найден
        "500":
          description: Внутренная ошибка при маршалинге найденного пользователя
  /boards:
    post:
      tags:
        - boards
      summary: Создаем доску
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      requestBody:
        description: Данные, необходимые для создания доски
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - title
              properties:
                id:
                  type: integer
                title:
                  type: string
                columns:
                  type: array
                  items:
                    $ref: "#/components/schemas/Board/properties/columns/items"
                admins:
                  type: array
                  items:
                    $ref: "#/components/schemas/Board/properties/admins/items"
                members:
                  type: array
                  items:
                    $ref: "#/components/schemas/Board/properties/admins/items"
            example:
              title: MyFirstBoard
      responses:
        "200":
          description: Успешно получили данные по доске
          content:
            application/json:
              schema:
                $ref: "#/paths/~1boards/post/requestBody/content/application~1json/schema"
              example:
                id: 10
                title: SuperBoard
                admins:
                  - id: 110
                    name: Sasha
                    surname: Upkin
                    nickname: Vova1
                    email: SashaUpkin@gmail.com
                    avatar: http://localhost:5757/img/avatar/Vova1.png
        "400":
          description: Невалидные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "500":
          description: Внутренняя ошибка сервера
    get:
      tags:
        - boards
      summary: Получаем все доски, к которым пользователь имеет отношение
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Успешно получили список досок (пустой список в том числе)
          content:
            application/json:
              schema:
                $ref: "#/paths/~1boards/post/requestBody/content/application~1json/schema"
              example:
                member:
                  - id: 14
                    title: MemberBoard
                    members:
                      - id: 110323
                        name: Vasya
                        surname: Pupkin
                        nickname: Legolas1
                        email: VasyaPupkin@gmail.com
                        avatar: http://localhost:5757/img/avatar/Legolas1.png
                    admins:
                      - id: 110
                        name: Sasha
                        surname: Upkin
                        nickname: Vova1
                        email: SashaUpkin@gmail.com
                        avatar: http://localhost:5757/img/avatar/Vova1.png
                admin:
                  - id: 35
                    title: AdminBoard
                    members:
                      - id: 110323
                        name: Sasha
                        surname: Upkin
                        nickname: Vova1
                        email: VasyaPupkin@gmail.com
                        avatar: http://localhost:5757/img/avatar/Vova1.png
                    admins:
                      - id: 110
                        name: Vasya
                        surname: Ppkin
                        nickname: Legolas1
                        email: SashaUpkin@gmail.com
                        avatar: http://localhost:5757/img/avatar/Legolas1.png
        "401":
          description: В запросе отсутствует кука
        "500":
          description: Внутренняя ошибка сервера
  "/boards/{bid}":
    get:
      tags:
        - boards
      summary: Получаем определенную доску
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
      responses:
        "200":
          description: Успешно получили данные по доске
          content:
            application/json:
              schema:
                $ref: "#/paths/~1boards/post/requestBody/content/application~1json/schema"
              example:
                id: 10
                title: SuperBoard
                members:
                  - id: 110323
                    name: Vasya
                    surname: Pupkin
                    nickname: Legolas1
                    email: VasyaPupkin@gmail.com
                    avatar: http://localhost:5757/img/avatar/Legolas1.png
                admins:
                  - id: 110
                    name: Sasha
                    surname: Upkin
                    nickname: Vova1
                    email: SashaUpkin@gmail.com
                    avatar: http://localhost:5757/img/avatar/Vova1.png
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "500":
          description: Внутренняя ошибка сервера
    put:
      tags:
        - boards
      summary: Редактируем определенную доску (ЕЩЁ В ПРОЦЕССЕ РЕАЛИЗАЦИИ)
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
      requestBody:
        description: Данные, необходимые для обновления доски
        required: true
        content:
          application/json:
            schema:
              $ref: "#/paths/~1boards/post/requestBody/content/application~1json/schema"
            example:
              title: NewTitle
      responses:
        "200":
          description: Успешно обновили доску
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    delete:
      tags:
        - boards
      summary: Удаляем определенную доску (ЕЩЁ В ПРОЦЕССЕ РЕАЛИЗАЦИИ)
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Успешно удалили доску
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
  "/boards/{bid}/columns":
    get:
      tags:
        - columns
      summary: Получаем все колонки конкретной доски
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
      responses:
        "200":
          description: Успешно получили колонки
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/Board/properties/columns/items"
              example:
                columns:
                  - id: 152
                    title: Homework
                    pos: "0.08266362238478808"
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    post:
      tags:
        - columns
      summary: Создаем колонку на выбранной доске
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
      requestBody:
        description: Данные, необходимые для создания колонки
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Board/properties/columns/items"
            example:
              title: TitleForColumn
              pos: "0.08266362238478808"
      responses:
        "200":
          description: Успешно создали колонку
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Column/properties/tasks/items"
              example:
                id: 110
                title: TitleForColumn
                pos: "0.08266362238478808"
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
  "/boards/{bid}/columns/{cid}":
    get:
      tags:
        - columns
      summary: Получаем конкретную колонку конкретной доски
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: сid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
      responses:
        "200":
          description: Успешно получили колонку
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Board/properties/columns/items"
              example:
                id: 5
                title: Review
                pos: 0.08266362238478808
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    put:
      tags:
        - columns
      summary: Обновляем конкретную колонку конкретной доски (ЕЩЁ В ПРОЦЕССЕ РЕАЛИЗАЦИИ)
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: сid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
      requestBody:
        description: Данные, необходимые для обновления колонки
        required: true
        content:
          application/json:
            schema:
              - $ref: "#/components/schemas/Board/properties/columns/items"
            example:
              title: NewTitle
              pos: 0.08266362238478808
      responses:
        "200":
          description: Успешно обновили колонку
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    delete:
      tags:
        - columns
      summary: Удаляем конкретную колонку конкретной доски
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: сid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
      responses:
        "200":
          description: Успешно удалили доску
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
  "/boards/{bid}/columns/{cid}/tasks":
    get:
      tags:
        - tasks
      summary: Получаем таски определенных доски и колонки
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: cid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
      responses:
        "200":
          description: Успешно получили таски
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/Column/properties/tasks/items"
              example:
                tasks:
                  - id: 152
                    title: Homework
                    description: HW for doing
                    level: 10
                    deadline: 2017-07-21
                    pos: "0.08266362238478808"
                    cid: 11
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    post:
      tags:
        - tasks
      summary: Создаем таску на определенной доске и колонке
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: cid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
      requestBody:
        description: Данные, необходимые для создания таски
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Column/properties/tasks/items"
            example:
              title: Homework
              description: HW for doing
              level: 10
              deadline: "20170721"
              pos: 0.08266362238478808
      responses:
        "200":
          description: Успешно создали таску
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Column/properties/tasks/items"
              example:
                id: 25
                title: Homework
                description: HW for doing
                level: 10
                deadline: "20170721"
                pos: 0.08266362238478808
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
  "/boards/{bid}/columns/{cid}/tasks/{tid}":
    get:
      tags:
        - tasks
      summary: Получаем определенную таску определенных доски и колонки
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: cid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
        - in: path
          name: tid
          required: true
          schema:
            type: integer
          description: Уникальный номер таски
          example: 8
      responses:
        "200":
          description: Успешно получили таску
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Column/properties/tasks/items"
              example:
                task:
                  id: 152
                  title: Homework
                  description: HW for doing
                  level: 10
                  deadline: 2017-07-21
                  pos: 0.08266362238478808
                  cid: 11
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    put:
      tags:
        - tasks
      summary: Обновляем определенную таску определенных доски и колонки
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: cid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
        - in: path
          name: tid
          required: true
          schema:
            type: integer
          description: Уникальный номер таски
          example: 8
      requestBody:
        description: Данные, необходимые для обновления таски
        required: true
        content:
          application/json:
            schema:
              - $ref: "#/components/schemas/Column/properties/tasks/items"
            example:
              title: Homework
              description: HW for doing
              level: 10
              deadline: 2017-07-21
              pos: 0.082663622384788
              cid: 11
      responses:
        "200":
          description: Успешно обновили таску
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
    delete:
      tags:
        - tasks
      summary: Удаляем определенную таску определенных доски и колонки
      parameters:
        - in: cookie
          name: session_id
          schema:
            type: string
          required: true
        - in: path
          name: bid
          required: true
          schema:
            type: integer
          description: Уникальный номер доски
          example: 10
        - in: path
          name: cid
          required: true
          schema:
            type: integer
          description: Уникальный номер колонки
          example: 3
        - in: path
          name: tid
          required: true
          schema:
            type: integer
          description: Уникальный номер таски
          example: 8
      responses:
        "200":
          description: Успешно удалили таску
        "400":
          description: Неверные параметры запроса
        "401":
          description: В запросе отсутствует кука
        "403":
          description: Недостаточно прав для совершения операции
        "500":
          description: Внутренняя ошибка сервера
components:
  schemas:
    User:
      type: object
      required:
        - name
        - nickname
        - password
        - email
      properties:
        id:
          type: integer
        name:
          type: string
        surname:
          type: string
        nickname:
          type: string
        email:
          type: string
        path-to-avatar:
          type: string
        password:
          type: string
    Board:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
        title:
          type: string
        columns:
          type: array
          items:
            type: object
            required:
              - id
              - title
            properties:
              id:
                type: integer
              title:
                type: string
              position:
                type: number
                format: double
              tasks:
                type: array
                items:
                  $ref: "#/components/schemas/Column/properties/tasks/items"
              bid:
                type: integer
        admins:
          type: array
          items:
            type: object
            required:
              - name
              - nickname
              - password
              - email
            properties:
              id:
                type: integer
              name:
                type: string
              surname:
                type: string
              nickname:
                type: string
              email:
                type: string
              path-to-avatar:
                type: string
              password:
                type: string
        members:
          type: array
          items:
            $ref: "#/components/schemas/Board/properties/admins/items"
    Column:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
        title:
          type: string
        position:
          type: number
          format: double
        tasks:
          type: array
          items:
            type: object
            required:
              - title
              - position
            properties:
              id:
                type: integer
              title:
                type: string
              description:
                type: string
              level:
                type: integer
              deadline:
                type: string
                format: date-time
              position:
                type: number
                format: double
              cid:
                type: integer
        bid:
          type: integer
    Task:
      type: object
      required:
        - title
        - position
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        level:
          type: integer
        deadline:
          type: string
          format: date-time
        position:
          type: number
          format: double
        cid:
          type: integer
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
  securitySchemes:
    app_id:
      type: apiKey
      description: API key to authorize requests. If you don't have an OpenWeatherMap
        API key, use `fd4698c940c6d1da602a70ac34f0b147`.
      name: appid
      in: query
