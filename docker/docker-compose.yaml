version: "2.3"

networks:
  monitor-net:
    driver: bridge

services:
  api:
    image: drello-api
    container_name: drello-backend-api
    environment: 
      - DRELLO_PUBLIC_DIR=/app/public
    ports:
      - "8080:8080"

    volumes:
      # Отображение для сохранения картинки из под докера в папку фронтенда
      - ${DRELLO_PUBLIC_DIR}:/app/public

    depends_on:
      # postgres:
      #   condition: service_healthy
      session:
        condition: service_started
      user:
        condition: service_started


  session:
    image: drello-session
    container_name: drello-backend-session
    ports:
      - "8081:8081"

    depends_on:
      memcached:
        condition: service_started

  user:
    image: drello-user
    container_name: drello-backend-user
    environment: 
      - DRELLO_PUBLIC_DIR=/app/public
    ports:
      - "8082:8082"

    volumes:
      # Отображение для сохранения картинки из под докера в папку фронтенда
      - ${DRELLO_PUBLIC_DIR}:/app/public

    depends_on:
      postgres:
        condition: service_healthy

  memcached:
    container_name: memcached_container
    image: 'bitnami/memcached:latest'
    ports:
      - "11211:11211"
  
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_DB: drello_db
      POSTGRES_USER: drello_user
      POSTGRES_PASSWORD: drello1234
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "--dbname", "drello_db", "--host", "postgres", "--port", "5432", "--username", "drello_user"]
      timeout: 2s
      retries: 2
      start_period: 3s

#  #prometheus:
#   # image: prom/prometheus:latest
#    #user: "1000:1000"
#    #volumes:
#    #  - ./monitoring/:/etc/prometheus/
#    #  - ./monitoring/prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"
#    ports:
#      - 9090:9090
#
#  grafana:
#    image: grafana/grafana:latest
#    depends_on:
#      - prometheus
#    volumes:
#      - ./monitoring/grafana_data:/var/lib/grafana
#    environment:
#      - GF_SECURITY_ADMAIN_PASSWORD=temppasword
#    labels:
#      org.label-schema.group: "monitoring"
#    ports:
#      - 3030:3000
